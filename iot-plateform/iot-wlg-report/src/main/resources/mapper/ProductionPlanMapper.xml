<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aac.optics.wlg.report.mapper.ProductionPlanMapper">


    <select id="findProductionPlanByMonth" resultType="map">
        select ROW_NUMBER() OVER ( ORDER BY b.project_name, b.mold, b.cycle, b.code, b.name ) AS seq,
            b.mold as mold,
            b.cycle as cycle,
            b.code as code,
            b.name as name,
            b.project_name    as     projectName,
        (select max(c.plan_value) from production_plan c
            where c.code = b.code
            and c.mold = b.mold
            and c.cycle = b.cycle
            and c.project_name = b.project_name
            <if test="planDateStart != null">
                AND c.plan_date >= #{planDateStart}
            </if>
            <if test="planDateEnd != null">
                AND c.plan_date &lt;= #{planDateEnd}
            </if>
            ) as maxQty,
        ${selectColumn}
        from (select mold, cycle, code, name, project_name, plan_value, plan_date from production_plan
        where 1=1
        <if test="projectName != '' and projectName != null">
            AND project_name = #{projectName}
        </if>
        <if test="mold != '' and mold != null">
            AND mold = #{mold}
        </if>
        <if test="cycle != '' and cycle != null">
            AND cycle = #{cycle}
        </if>
        <if test="planDateStart != null">
            AND plan_date >= #{planDateStart}
        </if>
        <if test="planDateEnd != null">
            AND plan_date &lt;= #{planDateEnd}
        </if>
        ) as a
        pivot(max(plan_value) for plan_date in (${pivotIn})) as b
        group by b.project_name, b.mold, b.cycle, b.code, b.name
        order by b.project_name, b.mold, b.cycle, b.code, b.name
    </select>


    <select id="findPlanDateByMonth" resultType="string">
        select distinct CONVERT(varchar(100), plan_date, 23) plan_date
        from production_plan
        where 1=1
        <if test="projectName != '' and projectName != null">
            AND project_name = #{projectName}
        </if>
        <if test="mold != '' and mold != null">
            AND mold = #{mold}
        </if>
        <if test="cycle != '' and cycle != null">
            AND cycle = #{cycle}
        </if>
        <if test="planDateStart != null">
            AND plan_date >= #{planDateStart}
        </if>
        <if test="planDateEnd != null">
            AND plan_date &lt;= #{planDateEnd}
        </if>
        order by plan_date
    </select>

</mapper>
