{"version":3,"sources":["webpack:///./src/views/lenspacker/LensPackerAlarmPage.vue","webpack:///./src/views/lenspacker/LensPackerAlarmPage.vue?534d","webpack:///./src/api/iot/lenspacker.js"],"names":["class","style","separator","dateTimePickerValue","type","shortcuts","range-separator","start-placeholder","end-placeholder","size","icon","getAlarmData","span","exportExcel","data","lensPackerAlarmDetails","stripe","border","id","height","prop","label","width","formatter","dateFormat","alarmDetailLoading","lensPackerAlarmCount","alarmCountLoading","name","text","value","end","Date","start","setTime","getTime","methods","row","column","this","$moment","property","format","tableId","excelFileName","wb","utils","table_to_book","document","querySelector","wbOut","write","bookType","bookSST","saveAs","Blob","e","console","log","getLensPackerAlarmDetail","length","$message","error","startTime","endTime","then","response","responseData","code","catch","getLensPackerAlarmCount","render","__scopeId","getAlarmDetail","machineName","request","url","method","headers","params","getAlarmCount","getMachineList","getMachineCapacity","getMachineStatus","getMachineAlarms","getLensPackerStatusCount"],"mappings":"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","file":"js/chunk-205151f2.d4654ff3.js","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> 包料机监控\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>包料机报警数据</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <div class=\"container\">\r\n      <el-row style=\"margin-bottom: 20px\">\r\n        <el-date-picker\r\n            v-model=\"dateTimePickerValue\"\r\n            type=\"datetimerange\"\r\n            :shortcuts=\"shortcuts\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            size=\"large\">\r\n        </el-date-picker>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"large\" style=\"margin-left: 10px\"\r\n                   @click=\"getAlarmData\">查询\r\n        </el-button>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <div style=\"margin-bottom: 10px\">\r\n            <el-button type=\"success\" icon=\"el-icon-download\" size=\"small\"\r\n                       @click=\"exportExcel('#alarmDetails', 'AlarmDetailsData.xlsx')\">导出\r\n            </el-button>\r\n          </div>\r\n          <el-table\r\n              :data=\"lensPackerAlarmDetails\"\r\n              stripe\r\n              border\r\n              id=\"alarmDetails\"\r\n              style=\"width: 95%\"\r\n              height=\"600\"\r\n              v-loading=\"alarmDetailLoading\">\r\n            <el-table-column\r\n                prop=\"monitMcName\"\r\n                label=\"机台名\"\r\n                width=\"85\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"alarmCode\"\r\n                label=\"报警种类\"\r\n                width=\"80\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"startTime\"\r\n                label=\"开始时间\"\r\n                width=\"160\"\r\n                :formatter=\"dateFormat\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"endTime\"\r\n                label=\"结束时间\"\r\n                width=\"160\"\r\n                :formatter=\"dateFormat\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"description\"\r\n                label=\"报警描述\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"duration\"\r\n                label=\"单次报警处理时间\">\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <div style=\"margin-bottom: 10px\">\r\n            <el-button type=\"success\" icon=\"el-icon-download\" size=\"small\"\r\n                       @click=\"exportExcel('#alarmCount', 'AlarmCountData.xlsx')\">导出\r\n            </el-button>\r\n          </div>\r\n          <el-table\r\n              :data=\"lensPackerAlarmCount\"\r\n              stripe\r\n              border\r\n              id=\"alarmCount\"\r\n              style=\"width: 95%\"\r\n              height=\"600\"\r\n              v-loading=\"alarmCountLoading\">\r\n            <el-table-column\r\n                prop=\"monitMcName\"\r\n                label=\"机台名\"\r\n                width=\"85\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"alarmCode\"\r\n                label=\"报警种类\"\r\n                width=\"80\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"description\"\r\n                label=\"报警描述\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"duration\"\r\n                label=\"处理时间S\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"alarmCount\"\r\n                label=\"报警次数\">\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from \"xlsx\";\r\nimport FileSaver from 'file-saver'\r\nimport {getAlarmDetail, getAlarmCount} from \"@/api/iot/lenspacker\";\r\n\r\nexport default {\r\n  name: \"LensPackerAlarmPage\",\r\n  data() {\r\n    return {\r\n      alarmDetailLoading: false,\r\n      alarmCountLoading: false,\r\n      dateTimePickerValue: [],\r\n      shortcuts: [{\r\n        text: '最近一天',\r\n        value: (() => {\r\n          const end = new Date();\r\n          const start = new Date();\r\n          start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n          return [start, end]\r\n        })()\r\n      }],\r\n      lensPackerAlarmDetails: [],\r\n      lensPackerAlarmCount: []\r\n    }\r\n  },\r\n  methods: {\r\n    dateFormat: function (row, column) {\r\n      return this.$moment(row[column.property]).format('YYYY-MM-DD HH:mm:ss')\r\n    },\r\n    exportExcel(tableId, excelFileName) {\r\n      const wb = XLSX.utils.table_to_book(document.querySelector(tableId));\r\n      const wbOut = XLSX.write(wb, {bookType: 'xlsx', bookSST: true, type: 'array'});\r\n      try {\r\n        FileSaver.saveAs(new Blob([wbOut], {type: 'application/octet-stream'}), excelFileName)\r\n      } catch (e) {\r\n        if (typeof console !== 'undefined') console.log(e, wbOut)\r\n      }\r\n      return wbOut\r\n    },\r\n    getLensPackerAlarmDetail() {\r\n      if (this.dateTimePickerValue.length !== 2) {\r\n        this.$message.error(\"请选择查询时间段\");\r\n      } else {\r\n        const startTime = this.$moment(this.dateTimePickerValue[0]).format('YYYY-MM-DD HH:mm:ss');\r\n        const endTime = this.$moment(this.dateTimePickerValue[1]).format('YYYY-MM-DD HH:mm:ss');\r\n        getAlarmDetail(startTime, endTime).then((response) => {\r\n          const responseData = response.data\r\n          if (responseData.code === '000000') {\r\n            this.lensPackerAlarmDetails = responseData.data;\r\n          }\r\n          this.alarmDetailLoading = false\r\n        }).catch(() => {\r\n          this.alarmDetailLoading = false\r\n        })\r\n      }\r\n    },\r\n    getLensPackerAlarmCount() {\r\n      if (this.dateTimePickerValue.length !== 2) {\r\n        this.$message.error(\"请选择查询时间段\");\r\n      } else {\r\n        const startTime = this.$moment(this.dateTimePickerValue[0]).format('YYYY-MM-DD HH:mm:ss');\r\n        const endTime = this.$moment(this.dateTimePickerValue[1]).format('YYYY-MM-DD HH:mm:ss');\r\n        getAlarmCount(startTime, endTime).then((response) => {\r\n          const responseData = response.data\r\n          if (responseData.code === '000000') {\r\n            this.lensPackerAlarmCount = responseData.data;\r\n          }\r\n          this.alarmCountLoading = false\r\n        }).catch(() => {\r\n          this.alarmCountLoading = false\r\n        })\r\n      }\r\n    },\r\n    getAlarmData() {\r\n      this.alarmDetailLoading = true\r\n      this.alarmCountLoading = true\r\n      this.getLensPackerAlarmCount()\r\n      this.getLensPackerAlarmDetail()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import { render } from \"./LensPackerAlarmPage.vue?vue&type=template&id=25b0bab2&scoped=true\"\nimport script from \"./LensPackerAlarmPage.vue?vue&type=script&lang=js\"\nexport * from \"./LensPackerAlarmPage.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-25b0bab2\"\n\nexport default script","import request from '@/utils/request'\n\nexport function getAlarmDetail(startTime, endTime, machineName) {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getAlarmDetail',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        params: {\n            startTime: startTime,\n            endTime: endTime,\n            machineName: machineName\n        }\n    })\n}\n\nexport function getAlarmCount(startTime, endTime, machineName) {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getAlarmCount',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        params: {\n            startTime: startTime,\n            endTime: endTime,\n            machineName: machineName\n        }\n\n    })\n}\n\nexport function getMachineList() {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getMachineList',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n}\n\nexport function getMachineCapacity(startTime, endTime) {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getMachineCapacity',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        params: {\n            startTime: startTime,\n            endTime: endTime\n        }\n    })\n}\n\nexport function getMachineStatus() {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getAllStatus',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n}\n\nexport function getMachineAlarms() {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getCurrentAlarm',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n}\n\nexport function getLensPackerStatusCount() {\n    return request({\n        url: '/lenspacker/lenspackerDashboard/getStatusCount',\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n}\n"],"sourceRoot":""}